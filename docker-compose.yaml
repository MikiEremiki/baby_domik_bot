version: "3.9"
name: "baby_domik"
services:
  bot:
    profiles: [ "all", "bot" ]
    container_name: bot
    build:
      context: .
    image: baby_domik:v1
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - network
    environment:
      CONFIG_PATH: '/app/config/'
    volumes:
      - ./config:/app/config:ro
      - ./config/settings.py:/app/src/settings/settings.py
      - ./src/db/data:/app/src/db/data
      - ./src/log/archive:/app/src/log/archive
    command: faststream run bot:fast_stream

  postgres:
    profiles: [ "all", "db" ]
    container_name: postgres
    image: "postgres:16"
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - config/.env
    ports:
      - "5431:5432"
    networks:
      - network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "$POSTGRES_USER", "-d", "$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5

  migration:
    profiles: [ "migration" ]
    container_name: migration
    build:
      context: .
      dockerfile: Dockerfile-migration
    image: mikieremiki/baby_domik_migration
    restart: no
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - network
    volumes:
      - ./config:/app/config:ro
      - ./src/db:/app/src/db:ro
    environment:
      - CONFIG_PATH=${CONFIG_PATH:-config/}
    working_dir: /app
  #    command: [ "alembic", "-c", "config/alembic.ini", "upgrade", "+1" ]
  #    command: [ "alembic", "-c", "config/alembic.ini", "downgrade", "-1" ]

  pgadmin:
    profiles: [ "pgadmin" ]
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: no
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - network

  nats:
    profiles: [ "nats", "1" ]
    container_name: nats
    image: nats:2.10.11-alpine
    restart: unless-stopped
    ports:
      - '6222:6222'
      - '8222:8222'
    volumes:
      - nats:/nats
      - ./config/server.conf:/etc/nats/server.conf
    networks:
      - network
    command: 'nats-server -c /etc/nats/server.conf'

  nats-cli:
    profiles: [ "nats-cli" ]
    container_name: nats-cli
    image: natsio/nats-box
    restart: unless-stopped
    networks:
      - network
    command: [ "tail", "-f", "/dev/null" ]

  fastapi:
    profiles: [ "fastapi", "1" ]
    container_name: fastapi
    build:
      context: .
      dockerfile: Dockerfile-server
    image: baby_domik_fastapi:v1
    restart: unless-stopped
    networks:
      - network
    depends_on:
      - nats

  nginx:
    profiles: [ "nginx", "1" ]
    container_name: nginx
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./config/server.crt:/etc/nginx/server.crt
      - ./config/server.key:/etc/nginx/server.key
    networks:
      - network
    depends_on:
      - fastapi

volumes:
  db:
  pgadmin:
  nats:

networks:
  network:
    name: baby_domik