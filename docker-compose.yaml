version: "3.8"
name: "baby_domik"
services:
  bot:
    profiles: [ "bot", "all" ]
    container_name: bot
    build:
      context: .
    image: baby_domik:v1
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - network
    environment:
      CONFIG_PATH: '/app/config/'
    volumes:
      - ./config:/app/config:ro
      - ./src/settings/settings.py:/app/src/settings/settings.py
      - data:/app/src/db/data
      - logs:/app/src/log/archive
  postgres:
    profiles: [ "all", "migration", "db" ]
    container_name: postgres
    image: "postgres:16"
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - config/.env
    ports:
      - "5431:5432"
    networks:
      - network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "$POSTGRES_USER", "-d",
              "$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
  migration:
    profiles: [ "migration" ]
    container_name: migration
    build:
      context: .
    image: baby_domik_migration
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - network
    volumes:
      - ./config:/app/config:ro
      - ./src/db:/app/src/db:ro
    environment:
      - CONFIG_PATH=${CONFIG_PATH:-./config/prod_config.toml}
    command: [ "alembic", "-c", "/app/alembic.ini", "upgrade", "head" ]
  pgadmin:
    profiles: [ "all", "migration", "db", "pgadmin" ]
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - network

volumes:
  db:
  data:
  logs:
  pgadmin:

networks:
  network:
    name: baby_domik